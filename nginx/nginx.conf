# Most of this comes from:
# https://github.com/h5bp/server-configs-nginx/tree/master/h5bp
# https://nginxconfig.io
# https://serversforhackers.com/c/nginx-caching

user nginx;

# Log errors and warnings to this file
# This is only used when you don't override it on a server{} level
# Default: logs/error.log error
# https://nginx.org/en/docs/ngx_core_module.html#error_log
error_log /var/log/nginx/error.log warn;

# The file storing the process ID of the main process
# Default: logs/nginx.pid
# https://nginx.org/en/docs/ngx_core_module.html#pid
pid /var/run/nginx.pid;

# Sets the worker threads to the number of CPU cores available in the system for best performance.
# Should be > the number of CPU cores.
# Maximum number of connections = worker_processes * worker_connections
# Default: 1
# https://nginx.org/en/docs/ngx_core_module.html#worker_processes
worker_processes auto;

# Maximum number of open files per worker process.
# Should be > worker_connections.
# Default: no limit
# https://nginx.org/en/docs/ngx_core_module.html#worker_rlimit_nofile
worker_rlimit_nofile 8192;

# Provides the configuration file context in which the directives
# that affect connection processing are specified.
# https://nginx.org/en/docs/ngx_core_module.html#events
events {
  multi_accept on;
  # If you need more connections than this, you start optimizing your OS.
  # That's probably the point at which you hire people who are smarter than you as this is *a lot* of requests.
  # Should be < worker_rlimit_nofile.
  # Default: 512
  # https://nginx.org/en/docs/ngx_core_module.html#worker_connections
  worker_connections 4000;
}

http {
  # Serve all resources labeled as `text/html` or `text/plain`
  # with the media type `charset` parameter set to `UTF-8`.
  charset utf-8;

  # Perfs
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  log_not_found off;
  keepalive_timeout 20s;
	types_hash_max_size 2048;
	client_max_body_size 16M;

  # Specify MIME types for files.
  include mime.types.conf;
  default_type application/octet-stream;

  # Update charset_types to match updated mime.types.
  # text/html is always included by charset module.
  # Default: text/html text/xml text/plain text/vnd.wap.wml application/javascript application/rss+xml
  #
  # https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset_types
  charset_types
    text/css
    text/plain
    text/vnd.wap.wml
    text/javascript
    text/markdown
    text/calendar
    text/x-component
    text/vcard
    text/cache-manifest
    text/vtt
    application/json
    application/manifest+json;

  # Security
  server_tokens off;

  # Log access to this file
  # This is only used when you don't override it on a server{} level
  # Default: logs/access.log combined
  # https://nginx.org/en/docs/http/ngx_http_log_module.html#access_log
  access_log /var/log/nginx/access.log;

  # Gzip
  gzip on;
  gzip_disable "msie6";
  gzip_comp_level 6;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_vary on;
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/geo+json
    application/vnd.ms-fontobject
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    application/rdf+xml
    font/otf
    application/wasm
    image/bmp
    image/svg+xml
    text/cache-manifest
    text/css
    text/javascript
    text/plain
    text/markdown
    text/vcard
    text/calendar
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy;

  server {
    listen 80;
    listen [::]:80;
    server_name ezconnecty.cc;

    location /socket.io/ {
      proxy_pass http://backend:3000/socket.io/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/ {
        proxy_pass http://backend:3000/; # Route /api/ requests to the backend service
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
      proxy_pass http://frontend:80;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}
